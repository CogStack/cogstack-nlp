name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build and release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout release branch
        run: |
            git checkout $GITHUB_REF
            # Make sure you're on the correct branch
            git pull origin $GITHUB_REF

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Update pyproject.toml version
        run: |
          sed -i 's/^version = ".*"/version = "'$VERSION'"/' pyproject.toml

      - name: Commit version update
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "Update version to $VERSION"
          git push

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: pip install --upgrade build

      - name: Build package
        run: python -m build

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          draft: true
          files: |
            dist/*

      # Uncomment and modify this for PyPI publishing in the future
      # - name: Publish to PyPI
      #   if: false # Set to `true` or remove when ready
      #   env:
      #     PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      #   run: |
      #     pip install --upgrade twine
      #     twine upload dist/*
